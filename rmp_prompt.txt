I'm using MFEA algorithm to optimize a number of different tasks. Help me design a strategy to generate a RMP matrix in which each element RMP[i][j] is the random mating rate between individual i and j. Provide the Python code for the strategy. The code is a Python function called 'get_rmp' that takes three inputs 'pop', 'fitness', 'skill_factor' where 'pop' is the current population, 'fitness' is the current population's fitness score, 'skill_factor' is the skill factor of current population in the MFEA algorithm. All are numpy arrays. The strategy should not be too simple. You can consider calculating the distance between individuals in population so that the algorithm doesn't converge too fast. Don't use for loop because it's slow, try to optimize using Numpy.
Focus on the syntax, don't provide code with syntax error!
Do not modify any of the paremeter passed into the function and be cautious with divide by zero.
Just provide the code without comment and no explanation.